Problem 5 EC;
-------------

// Online IDE - Code Editor, Compiler, Interpreter

public class Main
{
    public static void main(String[] args) {
        int[] A = {7,7,3,2};
        findMajEle(A);
    }
    
    // input A -> array of incomparable objects
    // output the element that occurs at least 2/3 of the time
    public static boolean findMajEle(int[] A){
        // return x such that x forms at least 0.666 ~ ceil[A.length * 2/3] of the elements
        // note that, subtracting the count of elements that aren't x from the count of 
        // elements that are x, should yield 1/3 -> floor[A.length * 2/3]
        
        int n = A.length;
        if(n == 0)
            return  false; // 'no solution'
        
        int count = 0;
        int majEle = 0;
        for(int i=0; i<n; i++){
            if(count == 0){
                majEle = A[i];
                count = 1;
            }
            else{
                if(A[i] == majEle)
                    ++count;
                else
                    --count;
            }
        }
        
        
        boolean result = count >= n - Math.ceil(n * 2/3) ? true : false;
        if(result)
            System.out.println("Maj element found to be " + majEle);
        
        return result;
    }
}

